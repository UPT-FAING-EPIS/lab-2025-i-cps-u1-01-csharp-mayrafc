name: Sonar Continuous Integration

env:
  DOTNET_VERSION: '8.0.x'
  SONAR_ORG: 'apibankk'
  SONAR_PROJECT: 'apibankk_apibank'
  PACKAGE_NAME: 'MiPaquete.ApiBank'
  PACKAGE_VERSION: '1.0.0'

on:
  push:
    branches: [ "main" ]
  workflow_dispatch:

jobs:
  sonarqube:
    name: Sonarqube Analisys
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
      - uses: actions/setup-java@v4
        with:
          distribution: 'temurin'
          java-version: '17'
      - name: Configurando la versi√≥n de NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: ${{ env.DOTNET_VERSION }}
      - name: Instalar Scanner
        run: dotnet tool install -g dotnet-sonarscanner
      - name: Ejecutar pruebas
        run: |
          dotnet restore 
          dotnet test --collect:"XPlat Code Coverage;Format=opencover"
          dotnet-sonarscanner begin /k:"${{ env.SONAR_PROJECT }}" /o:"${{ env.SONAR_ORG }}" /d:sonar.login="${{ secrets.SONAR_TOKEN }}" /d:sonar.host.url="https://sonarcloud.io" /d:sonar.cs.opencover.reportsPaths="*/*/*/coverage.opencover.xml" /d:sonar.qualitygate.wait=true
          dotnet build
          dotnet-sonarscanner end /d:sonar.login="${{ secrets.SONAR_TOKEN }}"

      - name: Create NuGet package
        run: dotnet pack --configuration Release --output ./nupkg

      - name: Add GitHub NuGet source
        run: |
          dotnet nuget add source --username ${{ github.actor }} \
            --password ${{ secrets.GITHUB_TOKEN }} \
            --store-password-in-clear-text \
            --name github "https://nuget.pkg.github.com/mayrafc/index.json"

      - name: Push NuGet package to GitHub Packages
        run: |
          dotnet nuget push ./nupkg/MiPaquete.ApiBank.1.0.0.nupkg \
            --source github \
            --api-key ${{ secrets.GITHUB_TOKEN }}
